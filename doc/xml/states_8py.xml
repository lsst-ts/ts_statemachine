<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="states_8py" kind="file" language="Python">
    <compoundname>states.py</compoundname>
    <innerclass refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState" prot="public">lsst::ts::statemachine::states::DefaultState</innerclass>
    <innerclass refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1OfflineState" prot="public">lsst::ts::statemachine::states::OfflineState</innerclass>
    <innerclass refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1StandbyState" prot="public">lsst::ts::statemachine::states::StandbyState</innerclass>
    <innerclass refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DisabledState" prot="public">lsst::ts::statemachine::states::DisabledState</innerclass>
    <innerclass refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1EnabledState" prot="public">lsst::ts::statemachine::states::EnabledState</innerclass>
    <innerclass refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1FaultState" prot="public">lsst::ts::statemachine::states::FaultState</innerclass>
    <innernamespace refid="namespacelsst_1_1ts_1_1statemachine_1_1states">lsst::ts::statemachine::states</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacelsst_1_1ts_1_1statemachine_1_1states" refkind="compound"><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral">Definitions<sp/>for<sp/>states<sp/>of<sp/>SAL<sp/>compoments.</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">Taken<sp/>from<sp/>file<sp/>toolsmod.py<sp/>in:</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">https://github.com/lsst/ctrl_iip/blob/master/python/lsst/iip/toolsmod.py</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>inspect</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>salpytools.utils<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>load_SALPYlib</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>salpytools.state_transition_exception<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>StateTransitionException</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">summary_state_enum<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;DISABLE&apos;</highlight><highlight class="normal">:0,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;ENABLE&apos;</highlight><highlight class="normal">:1,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;FAULT&apos;</highlight><highlight class="normal">:2,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;OFFLINE&apos;</highlight><highlight class="normal">:3,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;STANDBY&apos;</highlight><highlight class="normal">:4}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState" kindref="compound">DefaultState</ref>:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>name,<sp/>subsystem_tag,<sp/>events=(</highlight><highlight class="stringliteral">&apos;summaryState&apos;</highlight><highlight class="normal">,),<sp/>tsleep=0.5):</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a4f3cb92eec9c59a452695777097df2ea" kindref="member">name</ref><sp/>=<sp/>name</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a44b3d880719d5babcf582e32f7485bf0" kindref="member">subsystem_tag</ref><sp/>=<sp/>subsystem_tag</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a9e760bd9b1bdcd81aa5bd3dacacb7fd0" kindref="member">tsleep</ref><sp/>=<sp/>tsleep</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1af1419d45d10d76a486bfb6a23d59f526" kindref="member">log</ref><sp/>=<sp/>logging.getLogger(self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a4f3cb92eec9c59a452695777097df2ea" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1ac73747fbfd5ea2938e0c71635224f3a0" kindref="member">mgr</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a452e6ca9bd920f45a12c27e2f7b793a8" kindref="member">myData</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a055999cd1dc40758266bda41383002bb" kindref="member">logEvent</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a1fb657f66c0cdbfcecc967b3116848ff" kindref="member">myData_keys</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1ad4649318a830299b1f32891f4f5a3456" kindref="member">SALPY_lib</ref><sp/>=<sp/>load_SALPYlib(self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a44b3d880719d5babcf582e32f7485bf0" kindref="member">subsystem_tag</ref>)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>event<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>events:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a4f2c32b6740624d72e1c49ac0987440e" kindref="member">subscribe_logEvent</ref>(event)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a4f2c32b6740624d72e1c49ac0987440e" kindref="member">subscribe_logEvent</ref>(self,<sp/>eventname):</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Create<sp/>a<sp/>subscription<sp/>for<sp/>the<sp/>{subsystem_tag}_logevent_{eventnname}</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>step<sp/>need<sp/>to<sp/>be<sp/>done<sp/>before<sp/>we<sp/>call<sp/>send_logEvent</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>eventname:</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:return:</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1ac73747fbfd5ea2938e0c71635224f3a0" kindref="member">mgr</ref>[eventname]<sp/>=<sp/>getattr(self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1ad4649318a830299b1f32891f4f5a3456" kindref="member">SALPY_lib</ref>,<sp/></highlight><highlight class="stringliteral">&apos;SAL_{}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a44b3d880719d5babcf582e32f7485bf0" kindref="member">subsystem_tag</ref>))()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1ac73747fbfd5ea2938e0c71635224f3a0" kindref="member">mgr</ref>[eventname].salEvent(</highlight><highlight class="stringliteral">&quot;{}_logevent_{}&quot;</highlight><highlight class="normal">.format(self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a44b3d880719d5babcf582e32f7485bf0" kindref="member">subsystem_tag</ref>,<sp/>eventname))</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a055999cd1dc40758266bda41383002bb" kindref="member">logEvent</ref>[eventname]<sp/>=<sp/>getattr(self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1ac73747fbfd5ea2938e0c71635224f3a0" kindref="member">mgr</ref>[eventname],<sp/></highlight><highlight class="stringliteral">&apos;logEvent_{}&apos;</highlight><highlight class="normal">.format(eventname))</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a452e6ca9bd920f45a12c27e2f7b793a8" kindref="member">myData</ref>[eventname]<sp/>=<sp/>getattr(self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1ad4649318a830299b1f32891f4f5a3456" kindref="member">SALPY_lib</ref>,<sp/></highlight><highlight class="stringliteral">&apos;{}_logevent_{}C&apos;</highlight><highlight class="normal">.format(self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a44b3d880719d5babcf582e32f7485bf0" kindref="member">subsystem_tag</ref>,<sp/>eventname))()</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a1fb657f66c0cdbfcecc967b3116848ff" kindref="member">myData_keys</ref>[eventname]<sp/>=<sp/>[a[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>inspect.getmembers(self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a452e6ca9bd920f45a12c27e2f7b793a8" kindref="member">myData</ref>[eventname])<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>(a[0].startswith(</highlight><highlight class="stringliteral">&apos;__&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>a[0].endswith(</highlight><highlight class="stringliteral">&apos;__&apos;</highlight><highlight class="normal">))]</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1af1419d45d10d76a486bfb6a23d59f526" kindref="member">log</ref>.debug(</highlight><highlight class="stringliteral">&apos;Initializing:<sp/>{}_logevent_{}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a44b3d880719d5babcf582e32f7485bf0" kindref="member">subsystem_tag</ref>,<sp/>eventname))</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a302142c353918f82bbc7db0a132a71ce" kindref="member">send_logEvent</ref>(self,<sp/>eventname,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Send<sp/>logevent<sp/>for<sp/>an<sp/>eventname</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>eventname:</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>kwargs:</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:return:</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Populate<sp/>myData<sp/>object<sp/>for<sp/>keys<sp/>across<sp/>logevent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>self.myData[eventname].timestamp<sp/>=<sp/>kwargs.pop(&apos;timestamp&apos;,time.time())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a452e6ca9bd920f45a12c27e2f7b793a8" kindref="member">myData</ref>[eventname].priority<sp/>=<sp/>kwargs.pop(</highlight><highlight class="stringliteral">&apos;priority&apos;</highlight><highlight class="normal">,<sp/>1)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priority<sp/>=<sp/>int(self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a452e6ca9bd920f45a12c27e2f7b793a8" kindref="member">myData</ref>[eventname].priority)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Override<sp/>from<sp/>kwargs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kwargs:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setattr(self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a452e6ca9bd920f45a12c27e2f7b793a8" kindref="member">myData</ref>[eventname],<sp/>key,<sp/>kwargs.get(key))</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1af1419d45d10d76a486bfb6a23d59f526" kindref="member">log</ref>.debug(</highlight><highlight class="stringliteral">&apos;Sending<sp/>{}&apos;</highlight><highlight class="normal">.format(eventname))</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a055999cd1dc40758266bda41383002bb" kindref="member">logEvent</ref>[eventname](self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a452e6ca9bd920f45a12c27e2f7b793a8" kindref="member">myData</ref>[eventname],<sp/>priority)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1af1419d45d10d76a486bfb6a23d59f526" kindref="member">log</ref>.info(</highlight><highlight class="stringliteral">&apos;Sent<sp/>sucessfully<sp/>{}<sp/>Data<sp/>Object&apos;</highlight><highlight class="normal">.format(eventname))</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a1fb657f66c0cdbfcecc967b3116848ff" kindref="member">myData_keys</ref>[eventname]:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1af1419d45d10d76a486bfb6a23d59f526" kindref="member">log</ref>.info(</highlight><highlight class="stringliteral">&apos;\t{}:{}&apos;</highlight><highlight class="normal">.format(key,getattr(self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a452e6ca9bd920f45a12c27e2f7b793a8" kindref="member">myData</ref>[eventname],key)))</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time.sleep(self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a9e760bd9b1bdcd81aa5bd3dacacb7fd0" kindref="member">tsleep</ref>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">sleep(self):</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1af1419d45d10d76a486bfb6a23d59f526" kindref="member">log</ref>.debug(</highlight><highlight class="stringliteral">&apos;State<sp/>sleeping&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">wake(self):</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1af1419d45d10d76a486bfb6a23d59f526" kindref="member">log</ref>.debug(</highlight><highlight class="stringliteral">&apos;State<sp/>waking&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a302142c353918f82bbc7db0a132a71ce" kindref="member">send_logEvent</ref>(</highlight><highlight class="stringliteral">&apos;summaryState&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#&lt;-----<sp/>Default<sp/>State<sp/>methods<sp/>corresponding<sp/>to<sp/>UML<sp/>design<sp/>under<sp/>here<sp/>------&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">disable(self,<sp/>model):</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>StateTransitionException()</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">enable(self,<sp/>model):</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>StateTransitionException()</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">exit_control(self,<sp/>model):</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>StateTransitionException()</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">standby(self,<sp/>model):</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>StateTransitionException()</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">start(self,<sp/>model):</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>StateTransitionException()</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">enter_control(self,<sp/>model):</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>StateTransitionException()</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">exit(self,<sp/>model):</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1af1419d45d10d76a486bfb6a23d59f526" kindref="member">log</ref>.debug(</highlight><highlight class="stringliteral">&quot;Default:<sp/>exit()<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">do(self,<sp/>model):</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1af1419d45d10d76a486bfb6a23d59f526" kindref="member">log</ref>.debug(</highlight><highlight class="stringliteral">&quot;Default:<sp/>do()<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1OfflineState" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1OfflineState" kindref="compound">OfflineState</ref>(<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState" kindref="compound">DefaultState</ref>):</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>subsystem_tag,<sp/>events=(</highlight><highlight class="stringliteral">&apos;summaryState&apos;</highlight><highlight class="normal">,),<sp/>tsleep=0.5):</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(OfflineState,<sp/>self).__init__(</highlight><highlight class="stringliteral">&apos;OFFLINE&apos;</highlight><highlight class="normal">,<sp/>subsystem_tag,<sp/>events,<sp/>tsleep)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">enter_control(self,<sp/>model):</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.change_state(</highlight><highlight class="stringliteral">&quot;STANDBY&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a302142c353918f82bbc7db0a132a71ce" kindref="member">send_logEvent</ref>(</highlight><highlight class="stringliteral">&quot;summaryState&quot;</highlight><highlight class="normal">,<sp/>summaryState=5)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">exit(self,<sp/>model):</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1af1419d45d10d76a486bfb6a23d59f526" kindref="member">log</ref>.debug(</highlight><highlight class="stringliteral">&quot;Offline:<sp/>exit()<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">do(self,<sp/>model):</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1af1419d45d10d76a486bfb6a23d59f526" kindref="member">log</ref>.debug(</highlight><highlight class="stringliteral">&quot;Offline:<sp/>do()<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1StandbyState" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1StandbyState" kindref="compound">StandbyState</ref>(<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState" kindref="compound">DefaultState</ref>):</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>subsystem_tag,<sp/>events=(</highlight><highlight class="stringliteral">&apos;summaryState&apos;</highlight><highlight class="normal">,),<sp/>tsleep=0.5):</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(StandbyState,<sp/>self).__init__(</highlight><highlight class="stringliteral">&apos;STANDBY&apos;</highlight><highlight class="normal">,<sp/>subsystem_tag,<sp/>events,<sp/>tsleep)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">exit_control(self,<sp/>model):</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.change_state(</highlight><highlight class="stringliteral">&quot;OFFLINE&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a302142c353918f82bbc7db0a132a71ce" kindref="member">send_logEvent</ref>(</highlight><highlight class="stringliteral">&quot;summaryState&quot;</highlight><highlight class="normal">,<sp/>summaryState=4)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">start(self,<sp/>model):</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.change_state(</highlight><highlight class="stringliteral">&quot;DISABLED&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1a302142c353918f82bbc7db0a132a71ce" kindref="member">send_logEvent</ref>(</highlight><highlight class="stringliteral">&quot;summaryState&quot;</highlight><highlight class="normal">,<sp/>summaryState=1)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">exit(self,<sp/>model):</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1af1419d45d10d76a486bfb6a23d59f526" kindref="member">log</ref>.debug(</highlight><highlight class="stringliteral">&quot;Standby:<sp/>exit()<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">do(self,<sp/>model):</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState_1af1419d45d10d76a486bfb6a23d59f526" kindref="member">log</ref>.debug(</highlight><highlight class="stringliteral">&quot;Standby:<sp/>do()<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">on_heartbeat(self,<sp/>model):</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DisabledState" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DisabledState(DefaultState):</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>subsystem_tag,<sp/>events=(</highlight><highlight class="stringliteral">&apos;summaryState&apos;</highlight><highlight class="normal">,),<sp/>tsleep=0.5):</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(DisabledState,<sp/>self).__init__(</highlight><highlight class="stringliteral">&apos;DISABLED&apos;</highlight><highlight class="normal">,<sp/>subsystem_tag,<sp/>events,<sp/>tsleep)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">enable(self,<sp/>model):</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.change_state(</highlight><highlight class="stringliteral">&quot;ENABLED&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.send_logEvent(</highlight><highlight class="stringliteral">&quot;summaryState&quot;</highlight><highlight class="normal">,<sp/>summaryState=2)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">standby(self,<sp/>model):</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.change_state(</highlight><highlight class="stringliteral">&quot;STANDBY&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.send_logEvent(</highlight><highlight class="stringliteral">&quot;summaryState&quot;</highlight><highlight class="normal">,<sp/>summaryState=5)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">exit(self,<sp/>model):</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.debug(</highlight><highlight class="stringliteral">&quot;Disabled:<sp/>exit()<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">do(self,<sp/>model):</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.debug(</highlight><highlight class="stringliteral">&quot;Disabled:<sp/>do()<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">on_heartbeat(self,<sp/>model):</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">on_incoming_messaging_error(self,<sp/>model):</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">on_interrupt_end_loop(self,<sp/>model):</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">on_interrupt_process_triggers(self,<sp/>model):</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1EnabledState" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1EnabledState" kindref="compound">EnabledState</ref>(<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState" kindref="compound">DefaultState</ref>):</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>subsystem_tag,<sp/>events=(</highlight><highlight class="stringliteral">&apos;summaryState&apos;</highlight><highlight class="normal">,),<sp/>tsleep=0.5):</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(EnabledState,<sp/>self).__init__(</highlight><highlight class="stringliteral">&apos;ENABLED&apos;</highlight><highlight class="normal">,<sp/>subsystem_tag,<sp/>events,<sp/>tsleep)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">disable(self,<sp/>model):</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.change_state(</highlight><highlight class="stringliteral">&quot;DISABLED&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.send_logEvent(</highlight><highlight class="stringliteral">&quot;summaryState&quot;</highlight><highlight class="normal">,<sp/>summaryState=1)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">exit(self,<sp/>model):</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.debug(</highlight><highlight class="stringliteral">&quot;Enabled:<sp/>exit()<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">do(self,<sp/>model):</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.debug(</highlight><highlight class="stringliteral">&quot;Enabled:<sp/>do()<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">on_hearbeat(self,<sp/>model):</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">on_incoming_messaging_error(self,<sp/>model):</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">on_interrupt_end_loop(self,<sp/>model):</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">on_interrupt_process_triggers(self,<sp/>model):</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1FaultState" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1FaultState" kindref="compound">FaultState</ref>(<ref refid="classlsst_1_1ts_1_1statemachine_1_1states_1_1DefaultState" kindref="compound">DefaultState</ref>):</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>subsystem_tag,<sp/>events=(</highlight><highlight class="stringliteral">&apos;summaryState&apos;</highlight><highlight class="normal">,),<sp/>tsleep=0.5):</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(FaultState,<sp/>self).__init__(</highlight><highlight class="stringliteral">&apos;FAULT&apos;</highlight><highlight class="normal">,<sp/>subsystem_tag,<sp/>events,<sp/>tsleep)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">go_to_standby(self,<sp/>model):</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.change_state(</highlight><highlight class="stringliteral">&quot;STANDBY&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.send_logEvent(</highlight><highlight class="stringliteral">&quot;summaryState&quot;</highlight><highlight class="normal">,<sp/>summaryState=4)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">on_heartbeat(self,<sp/>model):</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">on_incoming_messaging_error(self,<sp/>model):</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">on_interrupt_end_loop(self,<sp/>model):</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight></codeline>
    </programlisting>
    <location file="python/lsst/ts/statemachine/states.py"/>
  </compounddef>
</doxygen>
