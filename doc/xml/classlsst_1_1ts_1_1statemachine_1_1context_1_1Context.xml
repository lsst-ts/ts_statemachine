<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context" kind="class" language="Python" prot="public">
    <compoundname>lsst::ts::statemachine::context::Context</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1a8fdd761c097e5b8aaa526a4d701e6cf4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lsst.ts.statemachine.context.Context::subsystem_tag</definition>
        <argsstring></argsstring>
        <name>subsystem_tag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ts/statemachine/context.py" line="25" column="1" bodyfile="python/lsst/ts/statemachine/context.py" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1a643a204ccc451c8700c84c9992b67d1c" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lsst.ts.statemachine.context.Context::model</definition>
        <argsstring></argsstring>
        <name>model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ts/statemachine/context.py" line="26" column="1" bodyfile="python/lsst/ts/statemachine/context.py" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1a71585f815fb252c8c9b5e1e9463cae4c" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lsst.ts.statemachine.context.Context::current_state</definition>
        <argsstring></argsstring>
        <name>current_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ts/statemachine/context.py" line="27" column="1" bodyfile="python/lsst/ts/statemachine/context.py" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1a94607ded65eb0478d9c6bb4335e06534" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lsst.ts.statemachine.context.Context::tsleep</definition>
        <argsstring></argsstring>
        <name>tsleep</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ts/statemachine/context.py" line="28" column="1" bodyfile="python/lsst/ts/statemachine/context.py" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1a5a30c2ea45882ac22249f3b4be3a9ce7" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lsst.ts.statemachine.context.Context::states</definition>
        <argsstring></argsstring>
        <name>states</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ts/statemachine/context.py" line="30" column="1" bodyfile="python/lsst/ts/statemachine/context.py" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1a3108fd7a16fea26a751334e2461e55ca" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lsst.ts.statemachine.context.Context::log</definition>
        <argsstring></argsstring>
        <name>log</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ts/statemachine/context.py" line="43" column="1" bodyfile="python/lsst/ts/statemachine/context.py" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1a9b7a09c5ab7eba175455076cb7808158" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lsst.ts.statemachine.context.Context.__init__</definition>
        <argsstring>(self, subsystem_tag, model, default_state=&apos;OFFLINE&apos;, tsleep=0.5, states=None)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>subsystem_tag</type>
          <defname>subsystem_tag</defname>
        </param>
        <param>
          <type>model</type>
          <defname>model</defname>
        </param>
        <param>
          <type>default_state</type>
          <defname>default_state</defname>
          <defval>&apos;OFFLINE&apos;</defval>
        </param>
        <param>
          <type>tsleep</type>
          <defname>tsleep</defname>
          <defval>0.5</defval>
        </param>
        <param>
          <type>states</type>
          <defname>states</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ts/statemachine/context.py" line="22" column="1" bodyfile="python/lsst/ts/statemachine/context.py" bodystart="23" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1aba926f6248628bc400a2fe82ff775621" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lsst.ts.statemachine.context.Context.subscribe_list</definition>
        <argsstring>(self, eventlist)</argsstring>
        <name>subscribe_list</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>eventlist</type>
          <defname>eventlist</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ts/statemachine/context.py" line="48" column="1" bodyfile="python/lsst/ts/statemachine/context.py" bodystart="48" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1a91cdce51db2d88e255d1f0d7a5d97595" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lsst.ts.statemachine.context.Context.send_logEvent</definition>
        <argsstring>(self, eventname, kwargs)</argsstring>
        <name>send_logEvent</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>eventname</type>
          <defname>eventname</defname>
        </param>
        <param>
          <type>kwargs</type>
          <defname>kwargs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Send logevent for an eventname</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ts/statemachine/context.py" line="53" column="1" bodyfile="python/lsst/ts/statemachine/context.py" bodystart="53" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1a53016ff56ba4b0ab0b8bd74159041661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lsst.ts.statemachine.context.Context.subscribe_logEvent</definition>
        <argsstring>(self, eventname)</argsstring>
        <name>subscribe_logEvent</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>eventname</type>
          <defname>eventname</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Create a subscription for the {Device}_logevent_{eventnname}
This step need to be done before we call send_logEvent

:param eventname:
:return:
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ts/statemachine/context.py" line="81" column="1" bodyfile="python/lsst/ts/statemachine/context.py" bodystart="81" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1a109135ca1424a0e49a3e31e9f7668814" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lsst.ts.statemachine.context.Context.get_current_state</definition>
        <argsstring>(self)</argsstring>
        <name>get_current_state</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Function to get the current state

:return:
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ts/statemachine/context.py" line="97" column="1" bodyfile="python/lsst/ts/statemachine/context.py" bodystart="97" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1aca52ae7b875bcd9b72bc7e549650f3dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lsst.ts.statemachine.context.Context.validate_transition</definition>
        <argsstring>(self, new_state)</argsstring>
        <name>validate_transition</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>new_state</type>
          <defname>new_state</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ts/statemachine/context.py" line="105" column="1" bodyfile="python/lsst/ts/statemachine/context.py" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1a187d66ab944b7764e09b885889171f6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lsst.ts.statemachine.context.Context.execute_command</definition>
        <argsstring>(self, command)</argsstring>
        <name>execute_command</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>command</type>
          <defname>command</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>This method delegates commands recieved by a DDSController to the
state.

The model is passed so that the State object may call methods on
it. Also the state is stored on the model only as a string
representation. The actual state object is stored on this context
object as self.states.

Attributes:
    command: A string representation of the command recieved by a
    DDSController object.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ts/statemachine/context.py" line="109" column="1" bodyfile="python/lsst/ts/statemachine/context.py" bodystart="109" bodyend="170"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>The Context orchestrates triggers from the states to the model.

When creating DDSControllers a Context is passed into it. When the
DDSController recieves commands it delegates these actions to the Context.
The context then delegates this to the active State. The salpylib allows
the states to be inherited from to override behavior of these states, in
face it is intended to be used this way. In essence this gives the
implementer full control on what the recieved call on the model.

Attributes:
    subsystem_tag: A string of the name of the CSC we want. Must exactly
    match the Subsystem Tag defined in XML. Link to current Subsystem Tags
    https://stash.lsstcorp.org/projects/TS/repos/ts_xml/browse/sal_interfaces
    default_state: default state defined within states.py of this library.
    tsleep: A sleeper to prevent race conditions when sending log events.
    states: List of states this context will contain. In general use, these
    should be subclassed states with overriden behavior.
</verbatim> </para>    </detaileddescription>
    <location file="python/lsst/ts/statemachine/context.py" line="3" column="1" bodyfile="python/lsst/ts/statemachine/context.py" bodystart="3" bodyend="170"/>
    <listofallmembers>
      <member refid="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1a9b7a09c5ab7eba175455076cb7808158" prot="public" virt="non-virtual"><scope>lsst::ts::statemachine::context::Context</scope><name>__init__</name></member>
      <member refid="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1a71585f815fb252c8c9b5e1e9463cae4c" prot="public" virt="non-virtual"><scope>lsst::ts::statemachine::context::Context</scope><name>current_state</name></member>
      <member refid="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1a187d66ab944b7764e09b885889171f6d" prot="public" virt="non-virtual"><scope>lsst::ts::statemachine::context::Context</scope><name>execute_command</name></member>
      <member refid="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1a109135ca1424a0e49a3e31e9f7668814" prot="public" virt="non-virtual"><scope>lsst::ts::statemachine::context::Context</scope><name>get_current_state</name></member>
      <member refid="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1a3108fd7a16fea26a751334e2461e55ca" prot="public" virt="non-virtual"><scope>lsst::ts::statemachine::context::Context</scope><name>log</name></member>
      <member refid="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1a643a204ccc451c8700c84c9992b67d1c" prot="public" virt="non-virtual"><scope>lsst::ts::statemachine::context::Context</scope><name>model</name></member>
      <member refid="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1a91cdce51db2d88e255d1f0d7a5d97595" prot="public" virt="non-virtual"><scope>lsst::ts::statemachine::context::Context</scope><name>send_logEvent</name></member>
      <member refid="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1a5a30c2ea45882ac22249f3b4be3a9ce7" prot="public" virt="non-virtual"><scope>lsst::ts::statemachine::context::Context</scope><name>states</name></member>
      <member refid="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1aba926f6248628bc400a2fe82ff775621" prot="public" virt="non-virtual"><scope>lsst::ts::statemachine::context::Context</scope><name>subscribe_list</name></member>
      <member refid="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1a53016ff56ba4b0ab0b8bd74159041661" prot="public" virt="non-virtual"><scope>lsst::ts::statemachine::context::Context</scope><name>subscribe_logEvent</name></member>
      <member refid="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1a8fdd761c097e5b8aaa526a4d701e6cf4" prot="public" virt="non-virtual"><scope>lsst::ts::statemachine::context::Context</scope><name>subsystem_tag</name></member>
      <member refid="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1a94607ded65eb0478d9c6bb4335e06534" prot="public" virt="non-virtual"><scope>lsst::ts::statemachine::context::Context</scope><name>tsleep</name></member>
      <member refid="classlsst_1_1ts_1_1statemachine_1_1context_1_1Context_1aca52ae7b875bcd9b72bc7e549650f3dd" prot="public" virt="non-virtual"><scope>lsst::ts::statemachine::context::Context</scope><name>validate_transition</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
